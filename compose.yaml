version: '3.8'

services:

  broker:
    image: apache/kafka:3.7.0
    hostname: broker
    container_name: broker
    ports:
      - '9092:9092'
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT'
      KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT_HOST://localhost:9092,PLAINTEXT://broker:19092'
      KAFKA_PROCESS_ROLES: 'broker,controller'
      KAFKA_CONTROLLER_QUORUM_VOTERS: '1@broker:29093'
      KAFKA_LISTENERS: 'CONTROLLER://:29093,PLAINTEXT_HOST://:9092,PLAINTEXT://:19092'
      KAFKA_INTER_BROKER_LISTENER_NAME: 'PLAINTEXT'
      KAFKA_CONTROLLER_LISTENER_NAMES: 'CONTROLLER'
      CLUSTER_ID: '4L6g3nShT-eMCtK--X86sw'
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_LOG_DIRS: '/tmp/kraft-combined-logs'
    networks:
      - my_network

  kafka-ui:
    image: provectuslabs/kafka-ui
    container_name: kafka-ui
    ports:
      - "8080:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: 'Local Kafka Cluster'
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: 'broker:19092'
      DYNAMIC_CONFIG_ENABLED: "true"
    depends_on:
      - broker
    networks:
      - my_network

  api:
    build:  
      context: ./api
      dockerfile: Dockerfile
    container_name: FastAPI
    depends_on:
      - postgres_db
      - broker
    ports:
      - "8000:8000"
    extra_hosts:
    - "host.docker.internal:host-gateway"
    networks:
      - my_network
    

  ui:
    build:
      context: ./ui
      dockerfile: Dockerfile
    container_name: Streamlit-UI
    depends_on:
      - api
    ports:
      - "8501:8501"
    extra_hosts:
    - "host.docker.internal:host-gateway"
    networks:
      - my_network
    

  logging-ui:
    build:
      context: ./ui
      dockerfile: Dockerfile.logging_ui
    container_name: Streamlit-Logging-UI
    depends_on:
      - api
      - broker
    ports:
      - "8502:8502"
    networks:
      - my_network
    restart: on-failure
   

  postgres_db:
    image: postgres:latest
    restart: always
    container_name: PostgresContainer

    environment:
      - POSTGRES_USER=raaidk
      - POSTGRES_PASSWORD=pass123
      - POSTGRES_DB=todo_database

    ports:
      - "5432:5432"

    volumes:
      - postgres_db:/var/lib/postgressql/todo_data

    networks:
      - my_network

  
networks:
  my_network:

volumes:
  kafka_data:
    driver: local

  postgres_db:
    driver: local